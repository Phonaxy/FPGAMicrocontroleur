library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Déclaration de l'entité du testbench (pas de ports)
entity tb_flipflop_JK is
end tb_flipflop_JK;

architecture Behavioral of tb_flipflop_JK is

    -- Signaux internes pour connecter au DUT (Device Under Test)
    signal clk_tb : std_logic := '0';
    signal J_tb   : std_logic := '0';
    signal K_tb   : std_logic := '0';
    signal Q_tb   : std_logic;

    -- Période d'horloge
    constant clk_period : time := 10 ns;

begin

    -- Instanciation du composant flipflop_JK
    uut: entity work.flipflop_JK
        port map (
            clk => clk_tb,
            J   => J_tb,
            K   => K_tb,
            Q   => Q_tb
        );

    -- Génération de l'horloge
    clk_process : process
    begin
        while true loop
            clk_tb <= '0';
            wait for clk_period/2;
            clk_tb <= '1';
            wait for clk_period/2;
        end loop;
    end process;

    -- Stimulus principal pour tester les comportements
    stim_proc: process
    begin

        -- Cas 1 : J=0, K=0 => Pas de changement
        J_tb <= '0'; K_tb <= '0';
        wait for clk_period;

        -- Cas 2 : J=0, K=1 => Reset
        J_tb <= '0'; K_tb <= '1';
        wait for clk_period;

        -- Cas 3 : J=1, K=0 => Set
        J_tb <= '1'; K_tb <= '0';
        wait for clk_period;

        -- Cas 4 : J=1, K=1 => Toggle
        J_tb <= '1'; K_tb <= '1';
        wait for clk_period;

        -- Nouveau toggle pour vérifier bien l'inversion
        J_tb <= '1'; K_tb <= '1';
        wait for clk_period;

        -- Cas 5 : Retour à pas de changement
        J_tb <= '0'; K_tb <= '0';
        wait for clk_period;

        -- Fin de la simulation
        wait;
    end process;

end Behavioral;
